defaults: &default_steps
  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Install dependencies
        command: |
          apk add --no-cache python3 && \
            python3 -m ensurepip && \
            rm -r /usr/lib/python*/ensurepip && \
            pip3 install --upgrade pip setuptools
          pip3 install \
            requests \
            tqdm
    - restore_cache:
        keys:
          - v2-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
    - run:
        name: Load Docker image layer cache
        command: |
          set +o pipefail
          mkdir -p /caches
          ls -la /caches
          docker load -i /caches/docker_image.tar | true
    - run:
        name: Fetch models
        command: |
          python3 fetch_models.py /caches/models
          ls -la models
    - run:
        name: Build application Docker image
        command: |
          docker build --cache-from=$SERVICE_NAME -t $SERVICE_NAME -f Dockerfile.gpu .
    - run:
        name: Save Docker image layer cache
        command: |
          mkdir -p /caches
          docker save -o /caches/docker_image.tar $SERVICE_NAME
          ls -la /caches/
    - save_cache:
        key: v2-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
        paths:
          - /caches/docker_image.tar
          - /caches/models
    - deploy:
        name: Push Docker image
        command: |
          if [ "$CIRCLE_BRANCH" == "master" ]; then
            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag $SERVICE_NAME $DOCKER_ORG/$SERVICE_NAME:$CIRCLE_SHA1
            docker tag $SERVICE_NAME $DOCKER_ORG/$SERVICE_NAME:latest
            docker push $DOCKER_ORG/$SERVICE_NAME:$CIRCLE_SHA1
            docker push $DOCKER_ORG/$SERVICE_NAME:latest
          fi
version: 2
jobs:
  build-container:
    working_directory: /face-services
    docker:
      - image: docker:18.06.1-ce-git
    environment:
      SERVICE_NAME: face-services
      ORG: singnet
      DOCKER_ORG: singularitynet
    <<: *default_steps
  deploy:
    machine:
      enabled: true
    environment:
      SERVICE_NAME: face-services
      DOCKER_ORG: singularitynet
      SNETD_PORT: 6201-6204
      SNETD_CONFIG: "config/kovan/."
      ETCD_VOLUME: face-services-etcd
      ETCD_CONTAINER_FOLDER: /face-services/etcd/
    steps:
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST << EOF
              docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD;
              docker pull $DOCKER_ORG/$SERVICE_NAME:$CIRCLE_SHA1
              docker stop $SERVICE_NAME && docker rm $SERVICE_NAME
              docker run --runtime=nvidia --name $SERVICE_NAME --restart unless-stopped -v $ETCD_VOLUME:$ETCD_CONTAINER_FOLDER -p $SNETD_PORT:$SNETD_PORT -di $DOCKER_ORG/$SERVICE_NAME:$CIRCLE_SHA1 python3.6 run_services.py --daemon-config-path $SNETD_CONFIG
            EOF
  deploy:
    machine:
      enabled: true
    environment:
      SERVICE_NAME: face-services-ropsten
      DOCKER_ORG: singularitynet
      SNETD_PORT: 6301-6304
      SNETD_CONFIG: "config/ropsten/."
      ETCD_VOLUME: face-services-ropsten-etcd
      ETCD_CONTAINER_FOLDER: /face-services/etcd/
    steps:
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST << EOF
              docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD;
              docker pull $DOCKER_ORG/$SERVICE_NAME:$CIRCLE_SHA1
              docker stop $SERVICE_NAME && docker rm $SERVICE_NAME
              docker run --runtime=nvidia --name $SERVICE_NAME --restart unless-stopped -v /etc/letsencrypt:/etc/letsencrypt -v $ETCD_VOLUME:$ETCD_CONTAINER_FOLDER -p $SNETD_PORT:$SNETD_PORT -di $DOCKER_ORG/$SERVICE_NAME:$CIRCLE_SHA1 python3.6 run_services.py --daemon-config-path $SNETD_CONFIG
            EOF
workflows:
  version: 2
  build-and-maybe-deploy:
    jobs:
      - build-container
      - deploy:
          requires:
            - build-container
          filters:
            branches:
              only: master
  